#!/bin/sh -e
# Copyright (c) 2012 Barry Allard
# MIT Licensed

OUTPUT=cat
[ -x "`which lolcat`" ] && OUTPUT="lolcat -F 2"

usage () {

  $OUTPUT << EOF >&2

    Usage: gio [-q] [-c] [-o] url [shortcut]

        -q Quiet
        -c Copy to the clipboard
        -o Open in the browser

        gio, a gimpy user of github's url shortener

EOF
  exit 1
}

[ x"$1" = x'-q' ] && shift && QUIET=1
[ x"$1" = x'-c' ] && shift && COPY_ALSO=1
[ x"$1" = x'-o' ] && shift && OPEN_ALSO=1
[ -z "$1" ] && usage

RAWURL=`echo "$1" | sed 's%[^:]*://%%;s%^/%%'`
SUBDOM="${RAWURL%github.com*}"
URLPATH="${RAWURL#*github.com}"
case "$SUBDOM" in
  # *.github.com domains not yet supported by git.io: api ca.wiki cloud enterprise jobs pages wiki
  # https:// not yet supported by github: develop(er)? (user's pages)
  gist.|raw.|"") SSL_ENABLED='s' ;;
  *) SSL_ENABLED='' ;; # just in case of some weird shell options
esac
URL="http$SSL_ENABLED://${SUBDOM}github.com${URLPATH}" 

[ -n "$2" ] && EXTRA="-F code=$2"

SHORT_URL=`curl -s -i http://git.io -F "url=$URL" $EXTRA | sed -n 's/[[:space:]]//g;s/^Location:\(.*\)/\1/p'`

if [ -n "$SHORT_URL" ] && [ -z "$QUIET" ]; then
  echo $SHORT_URL | $OUTPUT
else 
  echo "gio: Unable to shorten url" | $OUTPUT
  exit 1
fi

# Copy to the clipboard
[ -n "$COPY_ALSO" ] && [ -x "`which pbcopy`" ] && echo $SHORT_URL | pbcopy

# Open in a browser
[ -n "$OPEN_ALSO" ] && open "$SHORT_URL"
